import React, { useState, useEffect } from "react";
import axios from "axios";

//useState 와 useEffect로 데이터 로딩하기
//1. useState를 사용하여 요청 상태를 관리하고,
//2. useEffect를 사용하여 컴포넌트가 렌더링되는 시점에 요청을 시작하는 작업 진행
function Users() {
  const [users, setUsers] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const fetchUsers = async () => {
    try {
      //요청이 시작할 때는 error와 users를 초기화하고,
      setError(null);
      setUsers(null);
      //loading 상태를 true로 바꿔줌.
      setLoading(true);
      const response = await axios.get(
        "https://jsonplaceholder.typicode.com/users"
        //"https://jsonplaceholder.typicode.com/users/showmeerror"
      );
      setUsers(response.data);
    } catch (e) {
      setError(e);
    }
    setLoading(false);
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  if (loading) return <div>로딩중..</div>;
  if (error) return <div>에러가 발생했습니다</div>;
  if (!users) return null;
  return (
    <>
      <ul>
        {users.map((user) => (
          <li key={user.id}>
            {user.username} ({user.name})
          </li>
        ))}
      </ul>
      <button onClick={fetchUsers}>다시 불러오기</button>
    </>
  );
}

export default Users;
